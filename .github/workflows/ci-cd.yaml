name: Kafka Project CI

on:
  push:
    branches: [ main ]

jobs:
  test-codes:
    runs-on: ubuntu-latest
    steps:
          # Checks out the repository code
      - name: Git Clone Repository
        uses: actions/checkout@v4

      # Sets up Python environment
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      # Install project dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Run linting
      - name: Run Linter
        run: |
          # Run flake8 to check for style issues
          flake8 .

      # lint terraform codes
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Format Check
        run: |
          cd terraform
          terraform fmt -check

  build-and-push:
    needs: test-codes  # Ensures build only happens after tests pass
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Producer Image
        run: |
          docker build -t kafka-producer ./kafka-faker-event/producer
          docker tag kafka-producer:latest ${{ secrets.DOCKER_USERNAME }}/kafka-producer:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/kafka-producer:latest

      - name: Build Consumer Image
        run: |
          docker build -t kafka-consumer ./kafka-faker-event/consumer
          docker tag kafka-consumer:latest ${{ secrets.DOCKER_USERNAME }}/kafka-consumer:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/kafka-consumer:latest

